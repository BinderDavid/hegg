<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="357" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="357" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.Data.Equality.Extraction.findCosts (3 samples, 0.30%)</title><rect x="11.2" y="133" width="3.5" height="15.0" fill="rgb(247,41,32)" rx="2" ry="2" />
<text text-anchor="" x="14.18" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.CAF (991 samples, 99.10%)</title><rect x="10.0" y="293" width="1169.4" height="15.0" fill="rgb(246,130,51)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.CAF</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.traverse (15 samples, 1.50%)</title><rect x="1161.7" y="181" width="17.7" height="15.0" fill="rgb(211,24,18)" rx="2" ry="2" />
<text text-anchor="" x="1164.68" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.addToWorklist (2 samples, 0.20%)</title><rect x="34.8" y="149" width="2.3" height="15.0" fill="rgb(247,88,15)" rx="2" ry="2" />
<text text-anchor="" x="37.78" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.extractBest (19 samples, 1.90%)</title><rect x="11.2" y="181" width="22.4" height="15.0" fill="rgb(249,102,6)" rx="2" ry="2" />
<text text-anchor="" x="14.18" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.fmap (1 samples, 0.10%)</title><rect x="1169.9" y="117" width="1.2" height="15.0" fill="rgb(251,75,0)" rx="2" ry="2" />
<text text-anchor="" x="1172.94" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.find (2 samples, 0.20%)</title><rect x="54.8" y="117" width="2.4" height="15.0" fill="rgb(224,106,34)" rx="2" ry="2" />
<text text-anchor="" x="57.84" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.Data.Equality.Graph.add (6 samples, 0.60%)</title><rect x="33.6" y="165" width="7.1" height="15.0" fill="rgb(242,135,34)" rx="2" ry="2" />
<text text-anchor="" x="36.60" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Data.Equality.Matching.eGraphToDatabase (4 samples, 0.40%)</title><rect x="65.5" y="165" width="4.7" height="15.0" fill="rgb(232,43,33)" rx="2" ry="2" />
<text text-anchor="" x="68.46" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.Data.Equality.Extraction.extractBest (19 samples, 1.90%)</title><rect x="11.2" y="165" width="22.4" height="15.0" fill="rgb(214,182,29)" rx="2" ry="2" />
<text text-anchor="" x="14.18" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.substitute (3 samples, 0.30%)</title><rect x="1147.5" y="133" width="3.6" height="15.0" fill="rgb(246,220,51)" rx="2" ry="2" />
<text text-anchor="" x="1150.52" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.find (1 samples, 0.10%)</title><rect x="53.7" y="85" width="1.1" height="15.0" fill="rgb(227,184,27)" rx="2" ry="2" />
<text text-anchor="" x="56.66" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.varsInQuery (9 samples, 0.90%)</title><rect x="1151.1" y="133" width="10.6" height="15.0" fill="rgb(225,129,36)" rx="2" ry="2" />
<text text-anchor="" x="1154.06" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.symCost (2 samples, 0.20%)</title><rect x="26.5" y="85" width="2.4" height="15.0" fill="rgb(229,70,26)" rx="2" ry="2" />
<text text-anchor="" x="29.52" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.Data.Equality.Graph.merge (10 samples, 1.00%)</title><rect x="40.7" y="165" width="11.8" height="15.0" fill="rgb(248,229,52)" rx="2" ry="2" />
<text text-anchor="" x="43.68" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.modifyA (1 samples, 0.10%)</title><rect x="51.3" y="149" width="1.2" height="15.0" fill="rgb(224,39,21)" rx="2" ry="2" />
<text text-anchor="" x="54.30" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.addToWorklist (1 samples, 0.10%)</title><rect x="1168.8" y="133" width="1.1" height="15.0" fill="rgb(238,132,43)" rx="2" ry="2" />
<text text-anchor="" x="1171.76" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Saturation.equalitySaturation (991 samples, 99.10%)</title><rect x="10.0" y="245" width="1169.4" height="15.0" fill="rgb(237,16,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Saturation.equalitySaturation</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.add (12 samples, 1.20%)</title><rect x="1165.2" y="165" width="14.2" height="15.0" fill="rgb(247,42,11)" rx="2" ry="2" />
<text text-anchor="" x="1168.22" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.nodeTotalCost (14 samples, 1.40%)</title><rect x="17.1" y="101" width="16.5" height="15.0" fill="rgb(246,37,36)" rx="2" ry="2" />
<text text-anchor="" x="20.08" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.getClass (1 samples, 0.10%)</title><rect x="51.3" y="133" width="1.2" height="15.0" fill="rgb(213,15,14)" rx="2" ry="2" />
<text text-anchor="" x="54.30" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.liftCompare (2 samples, 0.20%)</title><rect x="1177.0" y="133" width="2.4" height="15.0" fill="rgb(221,69,41)" rx="2" ry="2" />
<text text-anchor="" x="1180.02" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.findRepr (1 samples, 0.10%)</title><rect x="1169.9" y="85" width="1.2" height="15.0" fill="rgb(233,203,1)" rx="2" ry="2" />
<text text-anchor="" x="1172.94" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.getClass (2 samples, 0.20%)</title><rect x="1171.1" y="133" width="2.4" height="15.0" fill="rgb(211,52,37)" rx="2" ry="2" />
<text text-anchor="" x="1174.12" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.add (6 samples, 0.60%)</title><rect x="33.6" y="181" width="7.1" height="15.0" fill="rgb(233,122,14)" rx="2" ry="2" />
<text text-anchor="" x="36.60" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.findCosts (3 samples, 0.30%)</title><rect x="11.2" y="149" width="3.5" height="15.0" fill="rgb(249,225,49)" rx="2" ry="2" />
<text text-anchor="" x="14.18" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.canonicalize (1 samples, 0.10%)</title><rect x="53.7" y="117" width="1.1" height="15.0" fill="rgb(211,200,38)" rx="2" ry="2" />
<text text-anchor="" x="56.66" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.eGraphToDatabase (4 samples, 0.40%)</title><rect x="65.5" y="181" width="4.7" height="15.0" fill="rgb(234,128,3)" rx="2" ry="2" />
<text text-anchor="" x="68.46" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.subst (305 samples, 30.50%)</title><rect x="786.4" y="69" width="359.9" height="15.0" fill="rgb(209,142,49)" rx="2" ry="2" />
<text text-anchor="" x="789.44" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Matching.Database.subst</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.traverse (4 samples, 0.40%)</title><rect x="28.9" y="85" width="4.7" height="15.0" fill="rgb(234,12,44)" rx="2" ry="2" />
<text text-anchor="" x="31.88" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>MAIN.MAIN (991 samples, 99.10%)</title><rect x="10.0" y="309" width="1169.4" height="15.0" fill="rgb(251,2,17)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >MAIN.MAIN</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.liftCompare (1 samples, 0.10%)</title><rect x="1146.3" y="101" width="1.2" height="15.0" fill="rgb(226,216,24)" rx="2" ry="2" />
<text text-anchor="" x="1149.34" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.repair (11 samples, 1.10%)</title><rect x="52.5" y="149" width="13.0" height="15.0" fill="rgb(237,89,2)" rx="2" ry="2" />
<text text-anchor="" x="55.48" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.setClass (1 samples, 0.10%)</title><rect x="50.1" y="149" width="1.2" height="15.0" fill="rgb(247,9,40)" rx="2" ry="2" />
<text text-anchor="" x="53.12" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.fmap (1 samples, 0.10%)</title><rect x="53.7" y="101" width="1.1" height="15.0" fill="rgb(240,26,25)" rx="2" ry="2" />
<text text-anchor="" x="56.66" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.Data.Equality.Graph.ReprUnionFind.findRepr (1 samples, 0.10%)</title><rect x="46.6" y="117" width="1.2" height="15.0" fill="rgb(211,54,33)" rx="2" ry="2" />
<text text-anchor="" x="49.58" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UNKNOWN (9 samples, 0.90%)</title><rect x="1179.4" y="309" width="10.6" height="15.0" fill="rgb(209,19,0)" rx="2" ry="2" />
<text text-anchor="" x="1182.38" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.findRepr (1 samples, 0.10%)</title><rect x="46.6" y="133" width="1.2" height="15.0" fill="rgb(232,48,50)" rx="2" ry="2" />
<text text-anchor="" x="49.58" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.find (2 samples, 0.20%)</title><rect x="31.2" y="69" width="2.4" height="15.0" fill="rgb(253,133,26)" rx="2" ry="2" />
<text text-anchor="" x="34.24" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.Data.Equality.Graph.add (12 samples, 1.20%)</title><rect x="1165.2" y="149" width="14.2" height="15.0" fill="rgb(243,196,13)" rx="2" ry="2" />
<text text-anchor="" x="1168.22" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.genericJoin (925 samples, 92.50%)</title><rect x="70.2" y="165" width="1091.5" height="15.0" fill="rgb(207,59,18)" rx="2" ry="2" />
<text text-anchor="" x="73.18" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Matching.Database.genericJoin</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Saturation.Data.Equality.Saturation.equalitySaturation' (991 samples, 99.10%)</title><rect x="10.0" y="213" width="1169.4" height="15.0" fill="rgb(227,100,37)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Saturation.Data.Equality.Saturation.equalitySaturation'</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.Data.Equality.Graph.rebuild (11 samples, 1.10%)</title><rect x="52.5" y="165" width="13.0" height="15.0" fill="rgb(214,94,54)" rx="2" ry="2" />
<text text-anchor="" x="55.48" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.Data.Equality.Matching.Database.intersectAtoms (905 samples, 90.50%)</title><rect x="79.6" y="117" width="1067.9" height="15.0" fill="rgb(234,74,18)" rx="2" ry="2" />
<text text-anchor="" x="82.62" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Matching.Database.Data.Equality.Matching.Database.intersectAtoms</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.Data.Equality.Graph.ReprUnionFind.findRepr (1 samples, 0.10%)</title><rect x="56.0" y="85" width="1.2" height="15.0" fill="rgb(213,169,41)" rx="2" ry="2" />
<text text-anchor="" x="59.02" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.Data.Equality.Graph.ReprUnionFind.findRepr (1 samples, 0.10%)</title><rect x="1169.9" y="69" width="1.2" height="15.0" fill="rgb(217,51,30)" rx="2" ry="2" />
<text text-anchor="" x="1172.94" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.liftCompare (1 samples, 0.10%)</title><rect x="1175.8" y="117" width="1.2" height="15.0" fill="rgb(208,20,0)" rx="2" ry="2" />
<text text-anchor="" x="1178.84" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.insertLookup (4 samples, 0.40%)</title><rect x="57.2" y="117" width="4.7" height="15.0" fill="rgb(219,95,27)" rx="2" ry="2" />
<text text-anchor="" x="60.20" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.modifyMemo (2 samples, 0.20%)</title><rect x="47.8" y="149" width="2.3" height="15.0" fill="rgb(249,62,23)" rx="2" ry="2" />
<text text-anchor="" x="50.76" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.Data.Equality.Matching.Database.genericJoin (925 samples, 92.50%)</title><rect x="70.2" y="149" width="1091.5" height="15.0" fill="rgb(219,69,54)" rx="2" ry="2" />
<text text-anchor="" x="73.18" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Matching.Database.Data.Equality.Matching.Database.genericJoin</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.elemOfAtom (3 samples, 0.30%)</title><rect x="76.1" y="133" width="3.5" height="15.0" fill="rgb(247,173,23)" rx="2" ry="2" />
<text text-anchor="" x="79.08" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.modifyMemo (1 samples, 0.10%)</title><rect x="38.3" y="149" width="1.2" height="15.0" fill="rgb(230,135,10)" rx="2" ry="2" />
<text text-anchor="" x="41.32" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.findCosts (16 samples, 1.60%)</title><rect x="14.7" y="133" width="18.9" height="15.0" fill="rgb(251,170,7)" rx="2" ry="2" />
<text text-anchor="" x="17.72" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.ematch (925 samples, 92.50%)</title><rect x="70.2" y="181" width="1091.5" height="15.0" fill="rgb(214,190,34)" rx="2" ry="2" />
<text text-anchor="" x="73.18" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Matching.ematch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Saturation.equalitySaturation' (991 samples, 99.10%)</title><rect x="10.0" y="229" width="1169.4" height="15.0" fill="rgb(222,227,11)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Saturation.equalitySaturation'</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.main (991 samples, 99.10%)</title><rect x="10.0" y="277" width="1169.4" height="15.0" fill="rgb(223,74,5)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.foldr (1 samples, 0.10%)</title><rect x="78.4" y="117" width="1.2" height="15.0" fill="rgb(240,48,30)" rx="2" ry="2" />
<text text-anchor="" x="81.44" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.fmap (1 samples, 0.10%)</title><rect x="1149.9" y="117" width="1.2" height="15.0" fill="rgb(207,63,17)" rx="2" ry="2" />
<text text-anchor="" x="1152.88" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.intersectAtoms (905 samples, 90.50%)</title><rect x="79.6" y="133" width="1067.9" height="15.0" fill="rgb(210,166,4)" rx="2" ry="2" />
<text text-anchor="" x="82.62" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Matching.Database.intersectAtoms</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.fmap (2 samples, 0.20%)</title><rect x="24.2" y="85" width="2.3" height="15.0" fill="rgb(227,177,3)" rx="2" ry="2" />
<text text-anchor="" x="27.16" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.runEGS (991 samples, 99.10%)</title><rect x="10.0" y="197" width="1169.4" height="15.0" fill="rgb(221,108,21)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Graph.runEGS</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.Data.Equality.Extraction.findCosts (16 samples, 1.60%)</title><rect x="14.7" y="117" width="18.9" height="15.0" fill="rgb(225,169,33)" rx="2" ry="2" />
<text text-anchor="" x="17.72" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.liftCompare (1 samples, 0.10%)</title><rect x="39.5" y="149" width="1.2" height="15.0" fill="rgb(215,146,3)" rx="2" ry="2" />
<text text-anchor="" x="42.50" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.rebuild (11 samples, 1.10%)</title><rect x="52.5" y="181" width="13.0" height="15.0" fill="rgb(253,183,42)" rx="2" ry="2" />
<text text-anchor="" x="55.48" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.getClass (1 samples, 0.10%)</title><rect x="37.1" y="149" width="1.2" height="15.0" fill="rgb(229,193,19)" rx="2" ry="2" />
<text text-anchor="" x="40.14" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.Data.Equality.Graph.ReprUnionFind.findRepr (2 samples, 0.20%)</title><rect x="31.2" y="37" width="2.4" height="15.0" fill="rgb(227,20,32)" rx="2" ry="2" />
<text text-anchor="" x="34.24" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.liftCompare (1 samples, 0.10%)</title><rect x="60.7" y="101" width="1.2" height="15.0" fill="rgb(223,40,27)" rx="2" ry="2" />
<text text-anchor="" x="63.74" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.intersectInTrie (898 samples, 89.80%)</title><rect x="86.7" y="101" width="1059.6" height="15.0" fill="rgb(229,18,27)" rx="2" ry="2" />
<text text-anchor="" x="89.70" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Matching.Database.intersectInTrie</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.runExtraction (16 samples, 1.60%)</title><rect x="14.7" y="149" width="18.9" height="15.0" fill="rgb(217,128,46)" rx="2" ry="2" />
<text text-anchor="" x="17.72" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Extraction.nodeTotalCost (2 samples, 0.20%)</title><rect x="12.4" y="117" width="2.3" height="15.0" fill="rgb(237,213,24)" rx="2" ry="2" />
<text text-anchor="" x="15.36" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.Data.Equality.Graph.ReprUnionFind.findRepr (1 samples, 0.10%)</title><rect x="53.7" y="53" width="1.1" height="15.0" fill="rgb(249,61,19)" rx="2" ry="2" />
<text text-anchor="" x="56.66" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.find (1 samples, 0.10%)</title><rect x="1169.9" y="101" width="1.2" height="15.0" fill="rgb(226,43,41)" rx="2" ry="2" />
<text text-anchor="" x="1172.94" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Matching.Database.Data.Equality.Matching.Database.intersectInTrie (862 samples, 86.20%)</title><rect x="129.2" y="85" width="1017.1" height="15.0" fill="rgb(233,112,11)" rx="2" ry="2" />
<text text-anchor="" x="132.18" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Data.Equality.Matching.Database.Data.Equality.Matching.Database.intersectInTrie</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Sym.rewrite (991 samples, 99.10%)</title><rect x="10.0" y="261" width="1169.4" height="15.0" fill="rgb(226,188,37)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Sym.rewrite</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.modifyMemo (3 samples, 0.30%)</title><rect x="1173.5" y="133" width="3.5" height="15.0" fill="rgb(238,226,33)" rx="2" ry="2" />
<text text-anchor="" x="1176.48" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.canonicalize (1 samples, 0.10%)</title><rect x="1169.9" y="133" width="1.2" height="15.0" fill="rgb(217,126,11)" rx="2" ry="2" />
<text text-anchor="" x="1172.94" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (1,000 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(248,112,10)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.findRepr (2 samples, 0.20%)</title><rect x="31.2" y="53" width="2.4" height="15.0" fill="rgb(210,199,4)" rx="2" ry="2" />
<text text-anchor="" x="34.24" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.find (1 samples, 0.10%)</title><rect x="46.6" y="149" width="1.2" height="15.0" fill="rgb(230,135,1)" rx="2" ry="2" />
<text text-anchor="" x="49.58" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.findRepr (1 samples, 0.10%)</title><rect x="53.7" y="69" width="1.1" height="15.0" fill="rgb(221,54,50)" rx="2" ry="2" />
<text text-anchor="" x="56.66" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.Data.Equality.Graph.repair (11 samples, 1.10%)</title><rect x="52.5" y="133" width="13.0" height="15.0" fill="rgb(210,119,1)" rx="2" ry="2" />
<text text-anchor="" x="55.48" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.ReprUnionFind.findRepr (1 samples, 0.10%)</title><rect x="56.0" y="101" width="1.2" height="15.0" fill="rgb(242,129,46)" rx="2" ry="2" />
<text text-anchor="" x="59.02" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Data.Equality.Graph.merge (10 samples, 1.00%)</title><rect x="40.7" y="181" width="11.8" height="15.0" fill="rgb(207,155,52)" rx="2" ry="2" />
<text text-anchor="" x="43.68" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
